import code_etu
from jacadi import ErreurEntréeVisible, ErreurEntréeInvisible, ExceptionEntréeVisible
from jacadi import FonctionÉtuManquante, ExceptionEntréeInvisible



entrees_sorties_visibles = {{es_visibles}}
entrees_sorties_invisibles = {{es_invisibles}}

try:
    fonction_etu = code_etu.{{solution}}
except Exception as e:
    raise FonctionÉtuManquante("{{solution}}")

def test_entrees_visibles():
    for e, s_ens in entrees_sorties_visibles:
        try:
            sortie_etu = fonction_etu(*e)
            print('entrée visible:', e)
        except Exception as ex:
            raise ExceptionEntréeVisible(e, ex, s_ens)
        else:
            if sortie_etu != s_ens:
                raise ErreurEntréeVisible(e, sortie_etu, s_ens)

def test_entrees_invisibles():
    print(entrees_sorties_invisibles)
    for e, s_ens in entrees_sorties_invisibles:
        try:
            sortie_etu = fonction_etu(*e)
            if sortie_etu != s_ens:
                raise ErreurEntréeInvisible("sur une entrée invisible, vous ne retournez pas la bonne valeur.")
        except Exception as ex:
            raise ExceptionEntréeInvisible(ex)
